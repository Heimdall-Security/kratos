name: Java CI Builder
on:
  push:
    tags:
      - "v*"
    branches:
      - "main"
      - "rc/**"
      - "develop"
      - "feature/**"
      - "bugfix/**"
      - "hotfix/**"
permissions:
  contents: read
  packages: write
  pull-requests: write
jobs:
  java-ci:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: Setup JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'adopt'
          java-version: '21'
      - name: Cache Gradle Packages
        uses: actions/cache@v4
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - name: Build with Gradle
        run: ./gradlew clean build publish -x test
        env:
          GITHUB_ACTOR: ${{ github.actor }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VERSION: ${{ github.ref_type == 'tag' && github.ref_name || github.run_number }}
      - name: Upload Heimdall Kratos Artifact
        uses: actions/upload-artifact@v4
        with:
          name: kratos.jar
          path: build/libs/*.jar
          retention-days: 1
  docker-build:
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    needs:
      - java-ci
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: Download Heimdall kratos Artifact
        uses: actions/download-artifact@v4
        id: download-artifact
        with:
          name: kratos.jar
          path: build/libs/kratos.jar
      - name: Downloaded Artifact Path
        run: echo ${{ steps.download-artifact.outputs.download-path }}
      - name: Login to Github Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Docker Metadata Action
        id: docker-metadata-action
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}
          tags: |
            type=ref,event=pr
            type=ref,event=branch
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
      - name: Setup QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: 'all'
      - name: Setup Docker BuildX
        uses: docker/setup-buildx-action@v3
      - name: Build and Push Docker Image
        uses: docker/build-push-action@v5
        env:
          ARTIFACTORY_PATH: ${{ steps.download-artifact.outputs.download-path }}
        with:
          context: .
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.docker-metadata-action.outputs.tags }}
